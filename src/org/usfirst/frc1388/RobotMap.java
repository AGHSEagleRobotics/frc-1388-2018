// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1388;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainrightFront;
    public static SpeedController driveTrainrightBack;
    public static SpeedControllerGroup driveTrainrightMotors;
    public static SpeedController driveTrainleftFront;
    public static SpeedController driveTrainleftBack;
    public static SpeedControllerGroup driveTrainleftMotors;
    public static DifferentialDrive driveTraintankDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainrightFront = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "rightFront", (Talon) driveTrainrightFront);
        driveTrainrightFront.setInverted(true);
        driveTrainrightBack = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "rightBack", (Talon) driveTrainrightBack);
        driveTrainrightBack.setInverted(true);
        driveTrainrightMotors = new SpeedControllerGroup(driveTrainrightFront, driveTrainrightBack  );
        LiveWindow.addActuator("DriveTrain", "rightMotors", driveTrainrightMotors);
        
        driveTrainleftFront = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "leftFront", (Talon) driveTrainleftFront);
        driveTrainleftFront.setInverted(false);
        driveTrainleftBack = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "leftBack", (Talon) driveTrainleftBack);
        driveTrainleftBack.setInverted(false);
        driveTrainleftMotors = new SpeedControllerGroup(driveTrainleftFront, driveTrainleftBack  );
        LiveWindow.addActuator("DriveTrain", "leftMotors", driveTrainleftMotors);
        
        driveTraintankDrive = new DifferentialDrive(driveTrainleftMotors, driveTrainrightMotors);
        LiveWindow.addActuator("DriveTrain", "tankDrive", driveTraintankDrive);
        driveTraintankDrive.setSafetyEnabled(true);
        driveTraintankDrive.setExpiration(0.1);
        driveTraintankDrive.setMaxOutput(1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
